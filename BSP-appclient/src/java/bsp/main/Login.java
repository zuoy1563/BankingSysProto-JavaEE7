package bsp.main;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import bsp.beans.AccountOperationInterface;
import bsp.beans.CustomerOperationInterface;
import bsp.beans.TransactionSearcherInterface;
import bsp.common.Common;
import bsp.entities.Account;
import bsp.entities.Customer;
import bsp.entities.Transaction;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.ejb.EJB;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Zoe
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    @EJB
    static CustomerOperationInterface coi;
    
    @EJB
    static AccountOperationInterface aoi;
    
    @EJB
    static TransactionSearcherInterface searcher;
    
    Customer c;
    public Login() throws NamingException {
        initComponents();
        c = new Customer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        savingPop = new javax.swing.JPopupMenu();
        withdraw = new javax.swing.JMenuItem();
        deposit = new javax.swing.JMenuItem();
        viewTransactions = new javax.swing.JMenuItem();
        transactionsFrame = new javax.swing.JFrame();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        tSearch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        depositFrame = new javax.swing.JFrame();
        jPanel10 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        dAmountField = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        dNameText = new javax.swing.JTextField();
        dSubmit = new javax.swing.JButton();
        dCancel = new javax.swing.JButton();
        withdrawFrame = new javax.swing.JFrame();
        jPanel12 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        wAmountField = new javax.swing.JTextField();
        jPanel13 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        wNameText = new javax.swing.JTextField();
        wSubmit = new javax.swing.JButton();
        wCancel = new javax.swing.JButton();
        transferFrame = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        outAccountNumber = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        inAccountNumber = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tNameText = new javax.swing.JTextField();
        amountField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jFrame2 = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        cLogout = new javax.swing.JButton();
        deleteMenu = new javax.swing.JPopupMenu();
        dUser = new javax.swing.JMenuItem();
        accountsFrame = new javax.swing.JFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        accountTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        useridField = new javax.swing.JTextField();
        userIDLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        welcomeLabel = new javax.swing.JLabel();

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jFrame1.setTitle("User Dashborad");
        jFrame1.setBounds(new java.awt.Rectangle(350, 250, 657, 500));
        jFrame1.setName("udframe"); // NOI18N

        jLabel2.setText("Please right click on your accounts to choose different services. Or you can double-clike to see transactions.");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("Hi, welcome to BSP!");

        jPanel3.setToolTipText("Menu");

        jButton3.setText("Transfer");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        exit.setText("Exit system");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        logout.setText("Log out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(logout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exit)
                .addGap(21, 21, 21))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Account No", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setSelectionBackground(new java.awt.Color(153, 204, 255));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );

        withdraw.setText("Withdraw");
        withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdrawActionPerformed(evt);
            }
        });
        savingPop.add(withdraw);

        deposit.setText("Deposit");
        deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositActionPerformed(evt);
            }
        });
        savingPop.add(deposit);

        viewTransactions.setText("View Transactions");
        viewTransactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTransactionsActionPerformed(evt);
            }
        });
        savingPop.add(viewTransactions);

        transactionsFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        transactionsFrame.setTitle("View Transactions");
        transactionsFrame.setBounds(new java.awt.Rectangle(350, 250, 705, 333));

        jLabel15.setText("Key word(search by type):");

        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        tSearch.setText("Search");
        tSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(tSearch)
                .addContainerGap(107, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(tSearch))
                .addContainerGap())
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Transaction No.", "Name", "Amount", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout transactionsFrameLayout = new javax.swing.GroupLayout(transactionsFrame.getContentPane());
        transactionsFrame.getContentPane().setLayout(transactionsFrameLayout);
        transactionsFrameLayout.setHorizontalGroup(
            transactionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        transactionsFrameLayout.setVerticalGroup(
            transactionsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionsFrameLayout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );

        depositFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        depositFrame.setTitle("Deposit");
        depositFrame.setBounds(new java.awt.Rectangle(400, 350, 359, 200));

        jLabel16.setText("Please enter the amount that you want to deposit:");

        jLabel17.setText("Amount");

        dAmountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dAmountFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel17)
                .addGap(38, 38, 38)
                .addComponent(dAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(dAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel13.setText("Name");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel13)
                .addGap(37, 37, 37)
                .addComponent(dNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(dNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dSubmit.setText("Submit");
        dSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dSubmitActionPerformed(evt);
            }
        });

        dCancel.setText("Cancel");
        dCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout depositFrameLayout = new javax.swing.GroupLayout(depositFrame.getContentPane());
        depositFrame.getContentPane().setLayout(depositFrameLayout);
        depositFrameLayout.setHorizontalGroup(
            depositFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositFrameLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
            .addGroup(depositFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(depositFrameLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(dSubmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dCancel)
                .addGap(67, 67, 67))
        );
        depositFrameLayout.setVerticalGroup(
            depositFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(depositFrameLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(depositFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dSubmit)
                    .addComponent(dCancel))
                .addGap(0, 34, Short.MAX_VALUE))
        );

        withdrawFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        withdrawFrame.setTitle("Withdraw");
        withdrawFrame.setBounds(new java.awt.Rectangle(400, 350, 369, 250));

        jLabel18.setText("Please enter the amount that you want to withdraw:");

        jLabel19.setText("Amount");

        wAmountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                wAmountFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel19)
                .addGap(38, 38, 38)
                .addComponent(wAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(wAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel12.setText("Name");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel12)
                .addGap(39, 39, 39)
                .addComponent(wNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(wNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        wSubmit.setText("Submit");
        wSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wSubmitActionPerformed(evt);
            }
        });

        wCancel.setText("Cancel");
        wCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout withdrawFrameLayout = new javax.swing.GroupLayout(withdrawFrame.getContentPane());
        withdrawFrame.getContentPane().setLayout(withdrawFrameLayout);
        withdrawFrameLayout.setHorizontalGroup(
            withdrawFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(withdrawFrameLayout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 49, Short.MAX_VALUE))
            .addGroup(withdrawFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(withdrawFrameLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(wSubmit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(wCancel)
                .addGap(79, 79, 79))
        );
        withdrawFrameLayout.setVerticalGroup(
            withdrawFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(withdrawFrameLayout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(withdrawFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wSubmit)
                    .addComponent(wCancel))
                .addGap(0, 124, Short.MAX_VALUE))
        );

        transferFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        transferFrame.setTitle("Transfer");
        transferFrame.setBounds(new java.awt.Rectangle(400, 300, 428, 350));

        outAccountNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        outAccountNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outAccountNumberActionPerformed(evt);
            }
        });

        jLabel5.setText("Transfer out account number");

        jLabel7.setText("Transfer in account number");

        inAccountNumber.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 3, 13)); // NOI18N
        jLabel8.setText("Please choose transfer in and out accounts:");

        jLabel4.setText("Name");

        amountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                amountFieldKeyTyped(evt);
            }
        });

        jLabel11.setText("Amount");

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(35, 35, 35))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton4))
                .addGap(0, 3, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel11))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel7))
                                    .addGap(25, 25, 25)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(outAccountNumber, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(inAccountNumber, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 101, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(inAccountNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout transferFrameLayout = new javax.swing.GroupLayout(transferFrame.getContentPane());
        transferFrame.getContentPane().setLayout(transferFrameLayout);
        transferFrameLayout.setHorizontalGroup(
            transferFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        transferFrameLayout.setVerticalGroup(
            transferFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        jFrame2.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jFrame2.setTitle("Admin Dashboard");
        jFrame2.setBounds(new java.awt.Rectangle(350, 250, 720, 450));

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "First Name", "Last Name", "Email", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerTable.setColumnSelectionAllowed(true);
        customerTable.setSelectionBackground(new java.awt.Color(153, 204, 255));
        customerTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        customerTable.getTableHeader().setReorderingAllowed(false);
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(customerTable);
        customerTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel6.setText("Please double click on a customer to see customer accounts.");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel9.setText("Welcome Admin!");

        jLabel10.setText("Or you can right click on a customer to delete that customer.");

        exitButton.setText("Exit system");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        cLogout.setText("Log out");
        cLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel6)
                            .addComponent(jLabel10)))
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(404, Short.MAX_VALUE))
            .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                    .addContainerGap(190, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 229, Short.MAX_VALUE)
                .addComponent(cLogout)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exitButton)
                .addGap(30, 30, 30))
            .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame2Layout.createSequentialGroup()
                    .addContainerGap(131, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        dUser.setText("Delete User");
        dUser.setActionCommand("Delete User");
        dUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dUserActionPerformed(evt);
            }
        });
        deleteMenu.add(dUser);

        accountsFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        accountsFrame.setBounds(new java.awt.Rectangle(350, 250, 763, 351));

        accountTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Account type", "Account Number", "Balance"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        accountTable.setColumnSelectionAllowed(true);
        accountTable.setSelectionBackground(new java.awt.Color(153, 204, 255));
        accountTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        accountTable.getTableHeader().setReorderingAllowed(false);
        accountTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                accountTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(accountTable);

        backButton.setText("Back to dashboard");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel14.setText("Here are all the account information for this customer, you can also double click to see transactions.");

        javax.swing.GroupLayout accountsFrameLayout = new javax.swing.GroupLayout(accountsFrame.getContentPane());
        accountsFrame.getContentPane().setLayout(accountsFrameLayout);
        accountsFrameLayout.setHorizontalGroup(
            accountsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountsFrameLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(accountsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accountsFrameLayout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE))
                    .addComponent(jLabel14))
                .addContainerGap())
        );
        accountsFrameLayout.setVerticalGroup(
            accountsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountsFrameLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(28, 28, 28)
                .addGroup(accountsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountsFrameLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountsFrameLayout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(53, 53, 53))))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BSP");
        setBounds(new java.awt.Rectangle(400, 300, 0, 0));

        submitButton.setText("Login");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Exit");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(submitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addGap(70, 70, 70))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(cancelButton)))
        );

        userIDLabel.setText("User ID:");

        jLabel1.setText("Password:");

        passwordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userIDLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(useridField)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                .addGap(61, 61, 61))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userIDLabel)
                    .addComponent(useridField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        welcomeLabel.setText("Welcome to BSP, please enter your user ID and password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(welcomeLabel)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(welcomeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if (useridField.getText().trim().equals("") || passwordField.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please input both user id and password!");
        }
        else {
            try {
                Customer user = validateUser(useridField.getText(), passwordField.getText());
                c = user;
                if (c == null)
                    throw new IllegalArgumentException("Invalid login!");
                if (user.getType().equals("Banking Worker")) {
                    fillCustomerTable();
                    jFrame2.setVisible(true);
                    setVisible(false);
                }
                else {
                    fillTable(c);
                    jFrame1.setVisible(true);
                    setVisible(false);
                    }
            }
            catch (Exception exc) {
                exc.printStackTrace();
                JOptionPane.showMessageDialog(null,exc.getMessage());
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed
    private Customer validateUser(String username, String password) {
        int id = Integer.parseInt(username);
        password = Common.getSHA256(password);
        Customer c = coi.searchCustomer(id, password);
        return c;
    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        try {
            System.exit(0);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Unexpected I/O exception happened.");
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void passwordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordFieldKeyTyped
        if(evt.getKeyChar() == '\n')      // press enter equals to click login
            submitButton.doClick();
    }//GEN-LAST:event_passwordFieldKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        refreshInAccountNumber();
        refreshOutAccountNumber();
        amountField.setText("");
        transferFrame.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        try {
            //BSP.writeData();
            System.exit(0);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Unexpected I/O exception happened.");
        }
    }//GEN-LAST:event_exitActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        try {
            new Login().setVisible(true);
            jFrame1.dispose();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Unexpected I/O exception happened.");
        }
    }//GEN-LAST:event_logoutActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            JTable table = (JTable) evt.getComponent();
            DefaultTableModel tableModel = (DefaultTableModel) table.getModel();

            int row = table.rowAtPoint(evt.getPoint());
            if (row == -1) {
                return ;
            }

            int[] rows = table.getSelectedRows();
            boolean inSelected = false ;

            for(int r : rows){
                if(row == r){
                    inSelected = true ;
                    break ;
                }
            }

            if(!inSelected){
                table.setRowSelectionInterval(row, row);
            }

            savingPop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
        if (SwingUtilities.isLeftMouseButton(evt)) {
            if (evt.getClickCount() == 2) {
                Account account = getAccountSelected();
                viewTransactions.doClick();
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void withdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdrawActionPerformed
        withdrawFrame.setVisible(true);
    }//GEN-LAST:event_withdrawActionPerformed

    private void depositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositActionPerformed
        dAmountField.setText("");
        depositFrame.setVisible(true);
    }//GEN-LAST:event_depositActionPerformed

    private void viewTransactionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTransactionsActionPerformed
        initializeTransactions(getAccountSelected());
        transactionsFrame.setVisible(true);
    }//GEN-LAST:event_viewTransactionsActionPerformed

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
        if(evt.getKeyChar() == '\n')      // press enter equals to click login
        tSearch.doClick();
    }//GEN-LAST:event_searchFieldKeyTyped

    private void tSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tSearchActionPerformed
        String s = searchField.getText();

        if (s.trim().equals(""))
        JOptionPane.showMessageDialog(null,"Please enter key word!");
        else {
            // TODO: search here
            Account account = getAccountSelected();
            fillTransactions(searcher.searchTransactionByType(s));

            searchField.setText("");
        }
    }//GEN-LAST:event_tSearchActionPerformed

    private void dAmountFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dAmountFieldKeyTyped
        if(evt.getKeyChar() == '\n')      // press enter equals to click login
        dSubmit.doClick();
    }//GEN-LAST:event_dAmountFieldKeyTyped

    private void dSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dSubmitActionPerformed
        String s = dAmountField.getText();
        String name = dNameText.getText();
        if (s.trim().equals(""))
            JOptionPane.showMessageDialog(null,"Please enter amount!");
        else if (name.trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter name!");
        }
        else {
            Account account = getAccountSelected();
            try {
                // TODO:
                deposit(account, Double.parseDouble(s), name, "Deposit");

                JOptionPane.showMessageDialog(null, "You have successfully "
                    + "deposited $" + s + "!");
                depositFrame.dispose();
                fillTable(c);
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }

    }//GEN-LAST:event_dSubmitActionPerformed

    private void dCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dCancelActionPerformed
        dAmountField.setText("");
        depositFrame.dispose();
    }//GEN-LAST:event_dCancelActionPerformed

    private void wAmountFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wAmountFieldKeyTyped
        if(evt.getKeyChar() == '\n')      // press enter equals to click login
        wSubmit.doClick();
    }//GEN-LAST:event_wAmountFieldKeyTyped

    private void wSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wSubmitActionPerformed
        Account account = getAccountSelected();
        String amountStr = wAmountField.getText();
        String nameStr = wNameText.getText();
        if (amountStr.trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter amount!");
        }
        else if (nameStr.trim().equals("")) {
            JOptionPane.showMessageDialog(null,"Please enter name!");
        }
        else {
            try{
                //todo
                withdraw(account, Double.parseDouble(amountStr), nameStr, "Withdraw");
                JOptionPane.showMessageDialog(null,"Success");
                wAmountField.setEnabled(true);
                wAmountField.setText("");
                withdrawFrame.dispose();
                fillTable(c);
            }
            catch(Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
    }//GEN-LAST:event_wSubmitActionPerformed

    private void wCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wCancelActionPerformed
        withdrawFrame.dispose();
    }//GEN-LAST:event_wCancelActionPerformed

    private void outAccountNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outAccountNumberActionPerformed
        if (outAccountNumber.getItemCount() != 0) {
            String accountNo = (String)outAccountNumber.getSelectedItem();
            Account account = aoi.getAccountById(Integer.parseInt(accountNo));
            amountField.setText("" + account.getBalance());
        }
    }//GEN-LAST:event_outAccountNumberActionPerformed

    private void amountFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountFieldKeyTyped
        if(evt.getKeyChar() == '\n')      // press enter equals to click login
        jButton2.doClick();
    }//GEN-LAST:event_amountFieldKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (outAccountNumber.getItemCount() == 0 || inAccountNumber.getItemCount() == 0)
        JOptionPane.showMessageDialog(null,"Transfer in and out account cannot be blank!");
        else {
            try {
                String selectedOut = (String)outAccountNumber.getSelectedItem();
                String selectedIn = (String)inAccountNumber.getSelectedItem();
                Account outAccount = aoi.getAccountById(Integer.parseInt(selectedOut));
                Account inAccount = aoi.getAccountById(Integer.parseInt(selectedIn));

                String amountStr = amountField.getText();
                String name = tNameText.getText();
                
                if (amountStr.trim().equals("") || name.trim().equals(""))
                    throw new IllegalArgumentException("Please enter amount and name!");
                // TODO: no name / type previously
                transfer(outAccount, inAccount, Double.parseDouble(amountStr), name, "Transfer");
                showTransactionMessage(amountStr, outAccount, inAccount);
                transferFrame.dispose();

                fillTable(c);
            }
            catch (Exception exc){
                JOptionPane.showMessageDialog(null,exc.getMessage());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        transferFrame.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            JTable table = (JTable) evt.getComponent();
            DefaultTableModel tableModel = (DefaultTableModel) table.getModel();

            int row = table.rowAtPoint(evt.getPoint());
            if (row == -1) {
                return ;
            }

            int[] rows = table.getSelectedRows();
            boolean inSelected = false ;

            for(int r : rows){
                if(row == r){
                    inSelected = true ;
                    break ;
                }
            }

            if(!inSelected){
                table.setRowSelectionInterval(row, row); // if not selected, highlight it
            }

            deleteMenu.show(evt.getComponent(), evt.getX(), evt.getY()); // show pop up menu

        }
        if (SwingUtilities.isLeftMouseButton(evt)) {
            // if double click, show accounts frame
            if (evt.getClickCount() == 2) {
                fillAccountTable();
                accountsFrame.setVisible(true);
            }
        }
    }//GEN-LAST:event_customerTableMouseClicked
        /**
     * Get customer currently being selected
     * @return customer currently being selected
     */
    private Customer getCustomerSelected() {
        int index = customerTable.getSelectedRow();
        String customerID = (String)customerTable.getValueAt(index, 0);
        Customer customer = coi.searchCustomerByID(Integer.parseInt(customerID));
        return customer;
    }

    /**
     * Get account currently being selected
     * @return account currently being selected
     */
    private Account getAccountSelected(int i) {
        int index = accountTable.getSelectedRow();
        String accountNoStr = (String)accountTable.getValueAt(index, 0);
        Account account = aoi.getAccountById(Integer.parseInt(accountNoStr));
        return account;
    }
        /**
     * Fill the table of all accounts of a customer
     */
    public void fillAccountTable(){
        List<Account> accounts = aoi.getAccountsByPerson(getCustomerSelected());
        DefaultTableModel tableModel = (DefaultTableModel) accountTable.getModel();
        
        tableModel.setRowCount(0);  //clear all contents currently in table
        for(Account account : accounts){
            String[] arr=new String[3];
            arr[0] = Integer.toString(account.getAccountNo());
            arr[1] = Double.toString(account.getBalance());
            tableModel.addRow(arr);  // fill table with values in arr[]
        }
        accountTable.invalidate();  // refresh table
    }
    
        /**
     * Fill the table of all customers
     */
    public void fillCustomerTable(){
        List<Customer> customers = coi.getAllCustomers();
        DefaultTableModel tableModel = (DefaultTableModel) customerTable.getModel();
        
        tableModel.setRowCount(0);   //clear all contents currently in table
        for(Customer customer :customers){
            String[] arr=new String[5];
            arr[0] = String.valueOf(customer.getCustomerId());
            arr[1] = customer.getFirstname();
            arr[2] = customer.getLastname();
            arr[3] = customer.getEmail();
            arr[4] = customer.getType();
            
            tableModel.addRow(arr);  // fill table with values in arr[]
        }
        customerTable.invalidate();  // refresh table
    }
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        try {
            // write date before exit
            //BSP.writeData();
            System.exit(0);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Unexpected I/O exception happened.");
        }
    }//GEN-LAST:event_exitButtonActionPerformed

    private void cLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cLogoutActionPerformed
        try {
            // write all date before log out
            new Login().setVisible(true);
            dispose();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Unexpected I/O exception happened.");
        }

    }//GEN-LAST:event_cLogoutActionPerformed

    private void dUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dUserActionPerformed
        int op = JOptionPane.showConfirmDialog(null,"Are you sure you want to delete this user?",
            "Confirmation", JOptionPane.YES_NO_OPTION);
        if (op == JOptionPane.YES_OPTION) {
            deleteUser(getCustomerSelected());
            JOptionPane.showMessageDialog(null,"This user account has been deleted!");
            fillCustomerTable();
        }
    }//GEN-LAST:event_dUserActionPerformed

    private void accountTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountTableMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            JTable table = (JTable) evt.getComponent();
            DefaultTableModel tableModel = (DefaultTableModel) table.getModel();

            int row = table.rowAtPoint(evt.getPoint());
            if (row == -1) {
                return ;
            }

            int[] rows = table.getSelectedRows();
            boolean inSelected = false ;

            for(int r : rows){
                if(row == r){
                    inSelected = true ;
                    break ;
                }
            }

            if(!inSelected){
                table.setRowSelectionInterval(row, row);  // if not selected, highlight it
            }

        }
        if (SwingUtilities.isLeftMouseButton(evt)) {
            // nothing
        }
    }//GEN-LAST:event_accountTableMouseClicked

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        accountsFrame.dispose();
    }//GEN-LAST:event_backButtonActionPerformed
        /**
     * Show transaction message after transfer succeeded
     * @param amount
     * @param outAccount
     * @param inAccount
     */
    
    // TODO:
    private void showTransactionMessage(String amount, Account outAccount, Account inAccount) {
        SimpleDateFormat sdf = new SimpleDateFormat( "dd/MM/yyyy HH:mm" );
        JOptionPane.showMessageDialog(null,"Transfer successful!\n"
                                    + "Here are your transaction details:\n"
                                    + "Transfer date: " + sdf.format(new Date()) + "\n"
                                    + "Amount: " + amount + "\n"
                                    + "Transfer out Account Number: " + outAccount.getAccountNo() + "\n"
                                    + "New Balance: " + outAccount.getBalance() + "\n"
                                    + "Transfer in Account Number: " + inAccount.getAccountNo() + "\n"
                                    + "New Balance: " + inAccount.getBalance());
    }
    
        public void fillTable(Customer customer){
        List<Account> accounts = new ArrayList<>();
        accounts.addAll(aoi.getAccountsByPerson(c));
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        
        tableModel.setRowCount(0);
        for(Account account : accounts){
            String[] arr=new String[2]; //TODO
            arr[0] = Integer.toString(account.getAccountNo());
            arr[1] = Double.toString(account.getBalance());
            tableModel.addRow(arr);
        }
        jTable1.invalidate();
    }
    
    /**
     * Refresh transfer in account number
     */
    public void refreshInAccountNumber() {
        // remove all items first
        inAccountNumber.removeAllItems();
        // list all correspond account numbers
        /*
        if (selected.equals("Saving")) {
            List<Account> accounts = c.getAccounts();
            for (Account account : accounts) {
                if (account instanceof SavingAccount)
                inAccountNumber.addItem(Integer.toString(account.getAccountNo()));
            }
        }
        else if (selected.equals("Credit")) {
            List<Account> accounts = c.getAccounts();
            for (Account account : accounts) {
                if (account instanceof CreditAccount)
                inAccountNumber.addItem(Integer.toString(account.getAccountNo()));
            }
        }
        if (selected.equals("Home Loan")) {
            List<Account> accounts = c.getAccounts();
            for (Account account : accounts) {
                if (account instanceof HomeLoanAccount)
                inAccountNumber.addItem(Integer.toString(account.getAccountNo()));
            }
        }
        */
        List<Account> accounts = new ArrayList<>();
        accounts.addAll(aoi.getAllAccounts());
        accounts.removeAll(aoi.getAccountsByPerson(c));
        for (Account account : accounts) {
            if (!account.getCustomer().getType().equals("Banking Worker"))
            inAccountNumber.addItem(Integer.toString(account.getAccountNo()));
        }
        
    }
    
    /**
     * Refresh transfer out account numbers
     */
    private void refreshOutAccountNumber() {
        // remove all items first
        outAccountNumber.removeAllItems();
        List<Account> accounts = new ArrayList<>();
        accounts.addAll(aoi.getAccountsByPerson(c));
        for (Account account : accounts) {
            outAccountNumber.addItem(Integer.toString(account.getAccountNo()));
        }
        // list all correspond account numbers
        /*
        if (selected.equals("Saving")) {
            if (!amountField.isEnabled()) {
                amountField.setEnabled(true);
                amountField.setText("");
            }
            List<Account> accounts = c.getAccounts();
            for (Account account : accounts) {
                if (account instanceof SavingAccount){
                    outAccountNumber.addItem(Integer.toString(account.getAccountNo()));
                }
            }
        }
        else if (selected.equals("Term Deposit")) {
            List<Account> accounts = c.getAccounts();
            List<TermDepositAccount> tdAccounts = new ArrayList<>();
            for (Account account : accounts) {
                if (account instanceof TermDepositAccount){
                    outAccountNumber.addItem(Integer.toString(account.getAccountNo()));
                    tdAccounts.add((TermDepositAccount)account);
                }
            }
            if (!tdAccounts.isEmpty()){
                outAccountNumber.setSelectedIndex(0);
                amountField.setText(Float.toString(tdAccounts.get(0).getBalance()));
                amountField.setEnabled(false);
            }
        }
        else {
            if (!amountField.isEnabled()) {
                amountField.setEnabled(true);
                amountField.setText("");
            }
            List<Account> accounts = c.getAccounts();
            for (Account account : accounts) {
                if (account instanceof CreditAccount)
                outAccountNumber.addItem(Integer.toString(account.getAccountNo()));
            }
        }
        */
    }
    
    /**
     * Initialize the transactions should be listed for an account
     * @param account
     */
    public void initializeTransactions(Account account){
        List<Transaction> transactions = searcher.getAllTransactions();
        List<Transaction> result = new ArrayList<>();
        for (Transaction t : transactions) {
            if (t.getAccount().getAccountNo() == account.getAccountNo())
                result.add(t);
        }
        fillTransactions(result);
    }
    
    /**
     * List all the transactions given in the table
     * @param transactions
     */
    public void fillTransactions(List<Transaction> transactions) {
        DefaultTableModel tableModel = (DefaultTableModel) jTable2.getModel();
        String[] arr=new String[4];
        // delete all contents in the table
        tableModel.setRowCount(0);
        for (Transaction t : transactions) {
            arr[0] = Integer.toString(t.getNo());
            arr[1] = t.getName();
            arr[2] = Double.toString(t.getAmount());
            arr[3] = t.getType();
            
            // fill table with arr
            tableModel.addRow(arr);
        }
        // validate table
        jTable2.invalidate();
    }
    
    //
    
    public void deleteUser(Customer current) {
        Set<Account> accounts = current.getAccounts();
        List<Account> accounts1 = new ArrayList<>();
        accounts1.addAll(accounts);
        Account account = accounts1.get(0);
        searcher.destroy(account.getAccountNo());
        aoi.destroy(current);
        coi.destory(current);
    }
    
    public void transfer(Account out, Account in, Double amount,
            String name, String type) {
        if (out.getBalance() > amount) {
            in.setBalance(in.getBalance() + amount);
            out.setBalance(out.getBalance() - amount);
         
            Transaction t1 = new Transaction();
            t1.setAccount(in);
            t1.setAmount(amount);
            t1.setName(name);
            t1.setType(type);
            searcher.persist(t1);
            
            Transaction t2 = new Transaction();
            t2.setAccount(out);
            t2.setAmount(0 - amount);
            t2.setName(name);
            t2.setType(type);
            searcher.persist(t2);
        }
        else
            throw new IllegalArgumentException("Amount exceeds balance");
    }
    
    public void deposit(Account account, Double amount,
            String name, String type) {
        account.setBalance(account.getBalance() + amount);
        Transaction current = new Transaction();
        current.setAccount(account);
        current.setAmount(amount);
        current.setName(name);
        current.setType(type);
        searcher.persist(current);
    }
    
    public void withdraw(Account account, Double amount,
            String name, String type) {
        if (account.getBalance() > amount) {
            Transaction current = new Transaction();
            current.setAmount(0 - amount);
            account.setBalance(account.getBalance() - amount);
            current.setAccount(account);
            current.setName(name);
            current.setType(type);
            searcher.persist(current);
        }
        else
            throw new IllegalArgumentException("Amount exceeds balance");
    }
    
    public static String getAccountDetails(Account account) {
        //TODO;
        return "";
    }
    
    public List<Account> getTransferOutAccounts(Customer c) {
        if (c != null) {
            return aoi.getAccountsByPerson(c);
        }
        return new ArrayList<>();
    }
    
    public List<Account> getTransferInAccounts(Customer c) {
        if (c == null) {
            return new ArrayList<>();
        }
        List<Account> total = aoi.getAllAccounts();
        List<Account> out = getTransferOutAccounts(c);
        
        List<Account> remain = new ArrayList<>();
        remain.addAll(total);
        remain.removeAll(out);
        return remain;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /*for test
        Customer c = new Customer("Client","A",9999999999l);
        BSP.addCustomerToList(c);
        SavingAccount s = new SavingAccount(300);
        c.addAccountToList(s);
        TermDepositAccount td = new TermDepositAccount(10000,0.03f,3);
        c.addAccountToList(td);
        CreditAccount cr = new CreditAccount(20000f);
        c.addAccountToList(cr);

        
        SavingAccount.setInterestRate(0.03f);
        CreditAccount.setInterestRate(0.05f);
        HomeLoanAccount.setInterestRate(0.005f);
        */
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Login().setVisible(true);
            } catch (NamingException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }
    
        /**
     * Get the account that is currently selected
     * @return the account that is currently selected
     */
    private Account getAccountSelected() {
        int index = jTable1.getSelectedRow();
        String accountNoStr = (String)jTable1.getValueAt(index, 0);
        Account account = aoi.getAccountById(Integer.parseInt(accountNoStr));
        return account;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable accountTable;
    private javax.swing.JFrame accountsFrame;
    private javax.swing.JTextField amountField;
    private javax.swing.JButton backButton;
    private javax.swing.JButton cLogout;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTable customerTable;
    private javax.swing.JTextField dAmountField;
    private javax.swing.JButton dCancel;
    private javax.swing.JTextField dNameText;
    private javax.swing.JButton dSubmit;
    private javax.swing.JMenuItem dUser;
    private javax.swing.JPopupMenu deleteMenu;
    private javax.swing.JMenuItem deposit;
    private javax.swing.JFrame depositFrame;
    private javax.swing.JButton exit;
    private javax.swing.JButton exitButton;
    private javax.swing.JComboBox<String> inAccountNumber;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton logout;
    private javax.swing.JComboBox<String> outAccountNumber;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPopupMenu savingPop;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField tNameText;
    private javax.swing.JButton tSearch;
    private javax.swing.JFrame transactionsFrame;
    private javax.swing.JFrame transferFrame;
    private javax.swing.JLabel userIDLabel;
    private javax.swing.JTextField useridField;
    private javax.swing.JMenuItem viewTransactions;
    private javax.swing.JTextField wAmountField;
    private javax.swing.JButton wCancel;
    private javax.swing.JTextField wNameText;
    private javax.swing.JButton wSubmit;
    private javax.swing.JLabel welcomeLabel;
    private javax.swing.JMenuItem withdraw;
    private javax.swing.JFrame withdrawFrame;
    // End of variables declaration//GEN-END:variables
}
